import type { NextPage } from "next";
import React, { Key, useState, useEffect } from "react";

import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import axios from "axios";
import absoluteUrl from "next-absolute-url";
import { useRouter } from "next/router";

import StickyNote from "../components/StickyNote";
import AddModal from "../components/AddModal";
import EditModal from "../components/EditModal";

import { AddIcon } from "../icons/AddIcon";
interface stickyNoteProps {
  id: string;
  title: string;
  content: string;
  createdAt: Date;
  published: boolean;
  updatedAt: Date;
}

interface postNote {
  title: string;
  content: string;
}

interface homeProps {
  results: stickyNoteProps[];
}
const Home: NextPage = ({ results }: homeProps) => {
  const [notes, setNotes] = useState(results);
  const [showAddModal, setAddModalVisibility] = useState(false);
  const [showUpdateModal, setUpdateModalVisibility] = useState(false);
  const [selectEditedNote, setSelectEditedNote] = useState<stickyNoteProps>();
  const router = useRouter();

  const handleAddNote = async ({ title, content }: postNote) => {
    // add Note optimistically to ui
    const addNotes = [
      ...notes,
      { id: "", title, content, createdAt: new Date(), updatedAt: new Date(), published: false },
    ];
    try {
      setNotes(addNotes);
      const { data } = await axios.post(`/api/notes`, { title, content });
      // router.reload();
    } catch (error) {
      console.error(error);
    }
  };

  const handleEditNote = async ({ title, content }: postNote) => {
    try {
      const { data } = await axios.put(`/api/notes/${selectEditedNote.id}`, {
        title,
        content,
      });
      if (data) {
        router.reload();
      }
      setUpdateModalVisibility(!showUpdateModal);
      setSelectEditedNote(undefined);
    } catch (error) {
      console.error(error);
    }
  };

  const handleSelectEditedNote = (selectNote: stickyNoteProps) => {
    setSelectEditedNote(selectNote);
    setUpdateModalVisibility(!showUpdateModal);
  };

  const handleDeleteNote = async (id: string) => {
    //delete note base on id
    const removeItem = notes.filter((note) => note.id !== id);
    setNotes(removeItem);
    try {
      await axios.delete(`/api/notes/${id}`);
      router.reload();
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => console.log(results), [results]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {showAddModal && (
          <AddModal
            onHandleAddNote={handleAddNote}
            showAddModal={showAddModal}
            setAddModalVisibility={setAddModalVisibility}
          />
        )}
        {showUpdateModal && (
          <EditModal
            onHandleEditNote={handleEditNote}
            setSelectEditedNote={setSelectEditedNote}
            selectEditedNote={selectEditedNote}
            showUpdateModal={showUpdateModal}
            setUpdateModalVisibility={setUpdateModalVisibility}
          />
        )}
        <div onClick={() => setAddModalVisibility(!showAddModal)}>
          <AddIcon className="w-70" />
        </div>
        <div className="grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mt-10">
          {notes?.map((notes: stickyNoteProps, index: Key | null | undefined) => (
            <StickyNote
              key={index}
              data={notes}
              onSelectEditedNote={handleSelectEditedNote}
              onDeleteNote={handleDeleteNote}
            />
          ))}
        </div>
      </main>
    </div>
  );
};

export async function getServerSideProps({ req }) {
  const { origin } = absoluteUrl(req);
  const apiURL = `${origin}/api/notes`;
  const { data } = await axios.get(apiURL);
  return {
    props: {
      results: data.data.notes,
    },
  };
}

export default Home;
